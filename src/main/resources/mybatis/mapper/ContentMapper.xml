<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.inter.dao.ContentMapper" >
  <resultMap id="BaseResultMap" type="com.inter.model.Content" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="imgs" property="imgs" jdbcType="VARCHAR" />
    <result column="likes" property="likes" jdbcType="INTEGER" />
    <result column="comments" property="comments" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="updated" property="updated" jdbcType="TIMESTAMP" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, uid, type_id, title, content, imgs, likes, comments, type, updated, created
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from content
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from content
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.inter.model.Content" >
    insert into content (id, uid, type_id, 
      title, content, imgs, 
      likes, comments, type, 
      updated, created)
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{imgs,jdbcType=VARCHAR}, 
      #{likes,jdbcType=INTEGER}, #{comments,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{updated,jdbcType=TIMESTAMP}, #{created,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.inter.model.Content" >
    insert into content
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="imgs != null" >
        imgs,
      </if>
      <if test="likes != null" >
        likes,
      </if>
      <if test="comments != null" >
        comments,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="updated != null" >
        updated,
      </if>
      <if test="created != null" >
        created,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="imgs != null" >
        #{imgs,jdbcType=VARCHAR},
      </if>
      <if test="likes != null" >
        #{likes,jdbcType=INTEGER},
      </if>
      <if test="comments != null" >
        #{comments,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="updated != null" >
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.inter.model.Content" >
    update content
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="imgs != null" >
        imgs = #{imgs,jdbcType=VARCHAR},
      </if>
      <if test="likes != null" >
        likes = #{likes,jdbcType=INTEGER},
      </if>
      <if test="comments != null" >
        comments = #{comments,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="updated != null" >
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.inter.model.Content" >
    update content
    set uid = #{uid,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      imgs = #{imgs,jdbcType=VARCHAR},
      likes = #{likes,jdbcType=INTEGER},
      comments = #{comments,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      updated = #{updated,jdbcType=TIMESTAMP},
      created = #{created,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="listAllCount" parameterType="Map" resultType="java.lang.Integer">
    select count(*) from content
    <if test="searchKey !=null and searchKey!=''">
      where ( account like '%${searchKey}%' OR name LIKE '%${searchKey}%' )
    </if>
  </select>

  <select id="listByPage" parameterType="Map" resultType="Map">
    select * from content

    <if test="searchKey !=null and searchKey!=''">
      where (account like '%${searchKey}%' OR name LIKE '%${searchKey}%')
    </if>
    <if test="sortCol !=null and sortCol!='' ">
      Order by ${sortCol} ${sortType}
    </if>

    LIMIT ${pageNow},${pageSize}
  </select>
</mapper>