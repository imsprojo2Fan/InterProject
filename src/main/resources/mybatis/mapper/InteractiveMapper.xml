<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.inter.dao.InteractiveMapper" >
  <resultMap id="BaseResultMap" type="com.inter.model.Interactive" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="content_id" property="contentId" jdbcType="INTEGER" />
    <result column="like" property="like" jdbcType="INTEGER" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="from_uid" property="fromUid" jdbcType="INTEGER" />
    <result column="to_uid" property="toUid" jdbcType="INTEGER" />
    <result column="updated" property="updated" jdbcType="TIMESTAMP" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, content_id, like, comment, from_uid, to_uid, updated, created
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from interactive
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from interactive
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.inter.model.Interactive" >
    insert into interactive (id, content_id, like, 
      comment, from_uid, to_uid, 
      updated, created)
    values (#{id,jdbcType=INTEGER}, #{contentId,jdbcType=INTEGER}, #{like,jdbcType=INTEGER}, 
      #{comment,jdbcType=VARCHAR}, #{fromUid,jdbcType=INTEGER}, #{toUid,jdbcType=INTEGER}, 
      #{updated,jdbcType=TIMESTAMP}, #{created,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.inter.model.Interactive" >
    insert into interactive
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="contentId != null" >
        content_id,
      </if>
      <if test="like != null" >
        like,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="fromUid != null" >
        from_uid,
      </if>
      <if test="toUid != null" >
        to_uid,
      </if>
      <if test="updated != null" >
        updated,
      </if>
      <if test="created != null" >
        created,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="contentId != null" >
        #{contentId,jdbcType=INTEGER},
      </if>
      <if test="like != null" >
        #{like,jdbcType=INTEGER},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="fromUid != null" >
        #{fromUid,jdbcType=INTEGER},
      </if>
      <if test="toUid != null" >
        #{toUid,jdbcType=INTEGER},
      </if>
      <if test="updated != null" >
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.inter.model.Interactive" >
    update interactive
    <set >
      <if test="contentId != null" >
        content_id = #{contentId,jdbcType=INTEGER},
      </if>
      <if test="like != null" >
        like = #{like,jdbcType=INTEGER},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="fromUid != null" >
        from_uid = #{fromUid,jdbcType=INTEGER},
      </if>
      <if test="toUid != null" >
        to_uid = #{toUid,jdbcType=INTEGER},
      </if>
      <if test="updated != null" >
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.inter.model.Interactive" >
    update interactive
    set content_id = #{contentId,jdbcType=INTEGER},
      like = #{like,jdbcType=INTEGER},
      comment = #{comment,jdbcType=VARCHAR},
      from_uid = #{fromUid,jdbcType=INTEGER},
      to_uid = #{toUid,jdbcType=INTEGER},
      updated = #{updated,jdbcType=TIMESTAMP},
      created = #{created,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="listAllCount" parameterType="Map" resultType="java.lang.Integer">
    select count(*) from interactive
    <if test="searchKey !=null and searchKey!=''">
      where ( account like '%${searchKey}%' OR name LIKE '%${searchKey}%' )
    </if>
  </select>

  <select id="listByPage" parameterType="Map" resultType="Map">
    select * from interactive

    <if test="searchKey !=null and searchKey!=''">
      where (account like '%${searchKey}%' OR name LIKE '%${searchKey}%')
    </if>
    <if test="sortCol !=null and sortCol!='' ">
      Order by ${sortCol} ${sortType}
    </if>

    LIMIT ${pageNow},${pageSize}
  </select>
</mapper>